console.log('This site was generated by Hugo.');

// Main JavaScript file for Cyberguard theme

// Wait for DOM to be fully loaded
document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu toggle
    initMobileMenu();
    
    // Smooth scrolling for anchor links
    initSmoothScroll();
    
    // Publications "View All" functionality
    initPublicationsToggle();
    
    // Initialize animations
    initAnimations();
});

/**
 * Mobile menu initialization
 */
function initMobileMenu() {
    const menuToggle = document.querySelector('.mobile-menu-toggle');
    
    if (!menuToggle) return;
    
    menuToggle.addEventListener('click', function() {
        document.body.classList.toggle('menu-open');
        const isOpen = document.body.classList.contains('menu-open');
        menuToggle.setAttribute('aria-expanded', isOpen ? 'true' : 'false');
    });
    
    // Close menu when clicking outside
    document.addEventListener('click', function(event) {
        if (
            document.body.classList.contains('menu-open') && 
            !event.target.closest('.main-nav') && 
            !event.target.closest('.mobile-menu-toggle')
        ) {
            document.body.classList.remove('menu-open');
            menuToggle.setAttribute('aria-expanded', 'false');
        }
    });
    
    // Close menu when escape key is pressed
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' && document.body.classList.contains('menu-open')) {
            document.body.classList.remove('menu-open');
            menuToggle.setAttribute('aria-expanded', 'false');
        }
    });
    
    // Handle mobile menu link clicks
    const mobileMenuLinks = document.querySelectorAll('.main-nav a');
    mobileMenuLinks.forEach(link => {
        link.addEventListener('click', function() {
            // Only close the menu if it's an in-page anchor
            if (this.getAttribute('href').charAt(0) === '#') {
                document.body.classList.remove('menu-open');
                menuToggle.setAttribute('aria-expanded', 'false');
            }
        });
    });
}

/**
 * Smooth scrolling for anchor links
 */
function initSmoothScroll() {
    const anchorLinks = document.querySelectorAll('a[href^="#"]:not([href="#"])');
    
    anchorLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href');
            const targetElement = document.querySelector(targetId);
            
            if (!targetElement) return;
            
            const headerOffset = document.querySelector('.site-header').offsetHeight;
            const elementPosition = targetElement.getBoundingClientRect().top;
            const offsetPosition = elementPosition + window.pageYOffset - headerOffset;
            
            window.scrollTo({
                top: offsetPosition,
                behavior: 'smooth'
            });
        });
    });
}

/**
 * Publications toggle between showing featured only and all publications
 */
function initPublicationsToggle() {
    const viewAllButton = document.querySelector('.view-all-publications .btn');
    const publicationsGrid = document.querySelector('.publications-grid');
    
    if (!viewAllButton || !publicationsGrid) return;
    
    const publicationItems = publicationsGrid.querySelectorAll('.publication-card');
    const featuredItems = Array.from(publicationItems).filter(item => !item.classList.contains('non-featured'));
    const nonFeaturedItems = Array.from(publicationItems).filter(item => item.classList.contains('non-featured'));
    
    // Initially hide non-featured items if there are more than 3 publications
    if (publicationItems.length > 3) {
        nonFeaturedItems.forEach(item => {
            item.style.display = 'none';
        });
        viewAllButton.textContent = window.viewAllLabel || 'View All Publications';
    } else {
        viewAllButton.style.display = 'none';
    }
    
    // Toggle visibility of non-featured items
    viewAllButton.addEventListener('click', function(e) {
        e.preventDefault();
        
        const isShowingAll = this.getAttribute('data-showing-all') === 'true';
        
        if (isShowingAll) {
            // Hide non-featured
            nonFeaturedItems.forEach(item => {
                item.style.display = 'none';
            });
            this.textContent = window.viewAllLabel || 'View All Publications';
            this.setAttribute('data-showing-all', 'false');
        } else {
            // Show all
            nonFeaturedItems.forEach(item => {
                item.style.display = 'block';
            });
            this.textContent = window.viewLessLabel || 'View Less';
            this.setAttribute('data-showing-all', 'true');
        }
    });
}

/**
 * Initialize animations for content elements
 */
function initAnimations() {
    // Check if IntersectionObserver is supported
    if (!('IntersectionObserver' in window)) return;
    
    const animatedElements = document.querySelectorAll('.animate-on-scroll');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animated');
                // Stop observing once animation is triggered
                observer.unobserve(entry.target);
            }
        });
    }, {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    });
    
    animatedElements.forEach(element => {
        observer.observe(element);
    });
}

/**
 * Set cookie helper function
 */
function setCookie(name, value, days) {
    let expires = '';
    if (days) {
        const date = new Date();
        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
        expires = '; expires=' + date.toUTCString();
    }
    document.cookie = name + '=' + value + expires + '; path=/; SameSite=Strict';
}

/**
 * Get cookie helper function
 */
function getCookie(name) {
    const nameEQ = name + '=';
    const ca = document.cookie.split(';');
    for (let i = 0; i < ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) === ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
}

/**
 * Language switcher functions
 */
function setLanguagePreference(lang) {
    setCookie('preferred_lang', lang, 365);
}
